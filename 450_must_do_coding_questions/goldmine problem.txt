class Solution{
public:
    int maxGold(int n, int m, vector<vector<int>> M)
    {
        // code here
        int dp[n+1][m+1];
        memset(dp,0,sizeof(dp));
        int ans=INT_MIN;
        for(int i=0;i<n;i++)
        {
            dp[i][0]=M[i][0];
            ans=max(ans,dp[i][0]);
        }
        
        for(int j=1;j<m;j++)
        {
            for(int i=0;i<n;i++)
            {
                if(i==0)
                {
                    dp[i][j]=max(dp[i][j-1],dp[i+1][j-1])+M[i][j];
                }
                else if(i==n-1)
                {
                    dp[i][j]=max(dp[i][j-1],dp[i-1][j-1])+M[i][j];
                }
                else
                {
                    dp[i][j]=max(dp[i-1][j-1],max(dp[i][j-1],dp[i+1][j-1]))+M[i][j];
                }
                ans=max(ans,dp[i][j]);
            }
        }
        return ans;
        
    }
};
